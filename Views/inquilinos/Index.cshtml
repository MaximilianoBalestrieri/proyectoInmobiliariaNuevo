@model List<proyectoInmobiliariaNuevo.Models.Inquilino>
@{
    ViewData["Title"] = "Inquilinos";
}

<style>
    thead {
        background-color: black;
        color: white;
    }

    table {
        padding: 10px;
        border-collapse: separate;
        border-spacing: 0;
        border-radius: 5px;
        overflow: hidden;
    }

    thead tr:first-child th:first-child {
        border-top-left-radius: 5px;
    }

    thead tr:first-child th:last-child {
        border-top-right-radius: 5px;
    }

    /* Reducir la altura de las filas */
    th, td {
        padding: 5px 10px; /* Ajusta el padding vertical y horizontal */
        font-size: 14px; /* Opcional: Reduce el tamaño de la fuente */
    }

    tr {
        height: 30px; /* Ajusta la altura mínima de las filas */
    }
</style>


<h2>Inquilinos</h2>

<!-- Botón para agregar un nuevo inquilino -->
<a href="@Url.Action("Create", "Inquilinos")" class="btn btn-primary">Agregar Inquilino</a>

@* Mostrar mensaje si hay algún error o éxito *@
@if (ViewBag.Mensaje != null)
{
    <div class="alert alert-info">@ViewBag.Mensaje</div>
}

@if (Model != null && Model.Count > 0)
{

    <!-- Campo de búsqueda -->
    <input type="text" id="buscador" class="form-control mt-3 mb-3" placeholder="Buscar en la tabla...">

    <table class="table">
        <thead style="background-color: black; color: white;">
            <tr>
                <th onclick="ordenarTabla(0)" style="cursor: pointer;" title="Ordenar por ID">ID</th>
                <th onclick="ordenarTabla(1)" style="cursor: pointer;" title="Ordenar por DNI">DNI</th>
                <th onclick="ordenarTabla(2)" style="cursor: pointer;" title="Ordenar por Apellido">Apellido</th>
                <th onclick="ordenarTabla(3)" style="cursor: pointer;" title="Ordenar por Nombre">Nombre</th>
                <th onclick="ordenarTabla(4)" style="cursor: pointer;" title="Ordenar por Contacto">Contacto</th>
                <th>Acciones</th> <!-- No se ordena -->
            </tr>
        </thead>

        <tbody id="tablaDatos">
            @foreach (var inquilino in Model)
            {
                <tr>
                    <td>@inquilino.IdInquilino</td>
                    <td>@inquilino.DniInquilino</td>
                    <td>@inquilino.ApellidoInquilino</td>
                    <td>@inquilino.NombreInquilino</td>
                    <td>@inquilino.ContactoInquilino</td>
                    <td>
                        <a href="@Url.Action("Edit", "Inquilinos", new { id = inquilino.IdInquilino })" class="btn btn-warning btn-sm">Editar</a>
                        <a href="@Url.Action("Delete", "Inquilinos", new { id = inquilino.IdInquilino })" class="btn btn-danger btn-sm">Eliminar</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <div id="paginacion" class="d-flex justify-content-between mt-3">
        <button id="prevPagina" class="btn btn-secondary">Anterior</button>
        <span id="numPagina"></span>
        <button id="nextPagina" class="btn btn-secondary">Siguiente</button>
    </div>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // Búsqueda en tiempo real
            document.getElementById("buscador").addEventListener("keyup", function () {
                var valor = this.value.toLowerCase();
                var filas = document.querySelectorAll("#tablaDatos tr");

                filas.forEach(function (fila) {
                    var celdas = fila.querySelectorAll("td:not(:last-child)");
                    var textoFila = "";
                    celdas.forEach(celda => textoFila += celda.innerText.toLowerCase() + " ");
                    fila.style.display = textoFila.includes(valor) ? "" : "none";
                });
            });
        });

        // Función para ordenar la tabla al hacer clic en los encabezados
        function ordenarTabla(n) {
            var tabla = document.querySelector(".table tbody");
            var filas = Array.from(tabla.rows);
            var ordenAscendente = tabla.getAttribute("data-orden") !== "asc"; // Alternar entre ascendente y descendente

            filas.sort(function (filaA, filaB) {
                var celdaA = filaA.cells[n].innerText.trim().toLowerCase();
                var celdaB = filaB.cells[n].innerText.trim().toLowerCase();

                if (!isNaN(celdaA) && !isNaN(celdaB)) { // Ordenar números correctamente
                    return ordenAscendente ? celdaA - celdaB : celdaB - celdaA;
                }

                return ordenAscendente ? celdaA.localeCompare(celdaB) : celdaB.localeCompare(celdaA);
            });

            tabla.innerHTML = ""; // Limpiar la tabla y agregar las filas ordenadas
            filas.forEach(fila => tabla.appendChild(fila));

            tabla.setAttribute("data-orden", ordenAscendente ? "asc" : "desc"); // Guardar el estado del orden
        }

        document.addEventListener("DOMContentLoaded", function () {
            const filas = Array.from(document.querySelectorAll("#tablaDatos tr"));
            const filasPorPagina = 5; // Cambia este valor si necesitas más o menos filas por página
            let paginaActual = 1;

            function mostrarPagina() {
                const inicio = (paginaActual - 1) * filasPorPagina;
                const fin = inicio + filasPorPagina;

                filas.forEach((fila, i) => {
                    fila.style.display = (i >= inicio && i < fin) ? "" : "none";
                });

                document.getElementById("numPagina").innerText = `Página ${paginaActual} de ${Math.ceil(filas.length / filasPorPagina)}`;
            }

            document.getElementById("prevPagina").addEventListener("click", function () {
                if (paginaActual > 1) {
                    paginaActual--;
                    mostrarPagina();
                }
            });

            document.getElementById("nextPagina").addEventListener("click", function () {
                if (paginaActual < Math.ceil(filas.length / filasPorPagina)) {
                    paginaActual++;
                    mostrarPagina();
                }
            });

            mostrarPagina(); // Mostrar la primera página al cargar
        });

    </script>



}
else
{
    <p>No hay inquilinos disponibles para mostrar.</p>
}
